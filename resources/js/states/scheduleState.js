import create from "zustand";
import { createScheduleAction } from "~/actions/thesisActions";
import { PER_PAGE } from '~/utils/constant';

export const useScheduleStore = create((set, get) => ({
    isSubmit: false,
    isFormDate: false,
    isFormDetails: false,
    isSchedDetails: false,
    schedDetails:[],
    dates:[],
    start_date:null,
    end_date:null,
    datesDetails:[],
    formDate: [],
    dateTimeGroups: [],
    category: null,
    sy: null,
    sem: null,
    groupList: [],
    groupListNew:[],
    reportDetails:null,
    ratingLength:null,
    totalFacultyRating:null,
    proponents:null,
    thesisTitle:null,
    panel:null,
    totalPanel:null,
    totalPanelHasRating:null,
    panelRating:null,
    reportData: null,
    schedReport:null,
    defenseSchedId:null,
    perPage: PER_PAGE,
    page: 0,
    isViewPdf:false,
    filterBy: null,
    isLoading:false,
    setLoading: (value) => set((state) => ({ isLoading: value })),
    setFilterBy: (value) => set((state) => ({ filterBy: value })),
    setIsViewPdf: (value) => set((state) => ({ isViewPdf: value })),
    setPage: (value) => set((state) => ({ page: value })),
    setSchedId: (value) => set((state) => ({ defenseSchedId: value })),
    setFormDates: (value) => set((state) => ({ formDate: value })),
    setDates: (value) => set((state) => ({ dates: value })),
    setIsFormDate: (value) => set((state) => ({ isFormDate: value })),
    setIsFormDetails: (value) => set((state) => ({ isFormDetails: value })),
    setIsSchedDetails: (value) => set((state) => ({ isSchedDetails: value })),
    setDateTimeGroups: (value) => set((state) => ({ dateTimeGroups: value })),
    setSchedDetails: (value) => set((state) => ({ schedDetails: value })),
    sy:null,
    setSy: (value) => set((state) => ({ sy: value })),
    sem:null,
    setSem: (value) => set((state) => ({ sem: value })),
    category:null,
    setCategory: (value) => set((state) => ({ category: value })),
    college:null,
    setCollege: (value) => set((state) => ({ college: value })),
    dept:null,
    setDept: (value) => set((state) => ({ dept: value })),
    createSchedule: async (params) => {
        return  await createScheduleAction({ params });
    },
    setCategory: (value) => set((state) => ({ category: value })),
    setSY: (value) => set((state) => ({ sy: value })),
    setSem: (value) => set((state) => ({ sem: value })),
    setSubmit: (value) => set((state) => ({ isSubmit: value })),
    setGroupList: (value) => set((state) => ({ groupList: value })),
    setGroupListNew: (value) => set((state) => ({groupListNew: value })),
    setStartDate: (value) => set((state) => ({ start_date: value })),
    setEndDate: (value) => set((state) => ({ end_date: value })),
    setDatesDetails: (value) => set((state) => ({ datesDetails: value })),
    setReportDetails: (value) => set((state) => ({ reportDetails: value })),
    setRatingLength: (value) => set((state) => ({ ratingLength: value })),
    setThesisTitle :(value) => set((state) => ({ thesisTitle: value })),
    setProponents: (value) => set((state) => ({ proponents: value })),
    setTotalFacultyRating: (value) => set((state) => ({ totalFacultyRating: value })),
    setPanel: (value) => set((state) => ({ panel: value })),
    setTotalPanel: (value) => set((state) => ({ totalPanel: value })),
    setTotalPanelHasRating: (value) => set((state) => ({ totalPanelHasRating: value })),
    setPanelRating: (value) => set((state) => ({ panelRating: value })),
    setReportData: (value) => set((state) => ({ reportData: value })),
    setSchedreport: (value) => set((state) => ({ schedReport: value })),
}));
